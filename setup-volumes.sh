#!/bin/bash

# setup-volumes.sh - Generate docker-compose.override.yml with dynamic video directory mounts

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Setting up dynamic video directory mounts...${NC}"

# Check if .env file exists
if [ ! -f ".env" ]; then
    echo -e "${RED}Error: .env file not found${NC}"
    echo "Please create a .env file based on .env.example"
    exit 1
fi

# Source the .env file to get VIDEO_DIRS
set -a
source .env
set +a

# Check if VIDEO_DIRS is set
if [ -z "$VIDEO_DIRS" ]; then
    echo -e "${RED}Error: VIDEO_DIRS not set in .env file${NC}"
    exit 1
fi

echo "Found VIDEO_DIRS: $VIDEO_DIRS"

# Parse VIDEO_DIRS (comma-separated paths)
IFS=',' read -ra DIRS <<<"$VIDEO_DIRS"

# Check if HOST_VIDEO_PATHS is set for host directory mapping
HOST_PATHS=""
if [ -n "$HOST_VIDEO_PATHS" ]; then
    echo "Found HOST_VIDEO_PATHS: $HOST_VIDEO_PATHS"
    IFS=',' read -ra HOST_PATHS <<<"$HOST_VIDEO_PATHS"
fi

# Start building the override file
cat >docker-compose.override.yml <<'EOF'
# Auto-generated docker-compose.override.yml
# This file is generated by setup-volumes.sh based on VIDEO_DIRS in .env
# Do not edit manually - changes will be overwritten

services:
EOF

# Services that need video directory access
SERVICES=("api" "transcription-worker" "watcher")

for service in "${SERVICES[@]}"; do
    echo "  $service:" >>docker-compose.override.yml
    echo "    volumes:" >>docker-compose.override.yml

    # Add the standard volumes first
    case $service in
    "api")
        cat >>docker-compose.override.yml <<'EOF'
      - ./data:/app/data
      - ./common:/app/common
      - ./services/api_service:/app/api_service
      - ./services/transcription_service:/app/transcription_service
      - ./services/summarization_service:/app/summarization_service
EOF
        ;;
    "transcription-worker")
        cat >>docker-compose.override.yml <<'EOF'
      - ./data:/app/data
      - ./common:/app/common
      - ./services/transcription_service:/app/transcription_service
EOF
        ;;
    "watcher")
        cat >>docker-compose.override.yml <<'EOF'
      - ./data:/app/data
      - ./common:/app/common
      - ./services/api_service:/app/api_service
      - ./services/watcher_service:/app/watcher_service
EOF
        ;;
    esac

    # Add dynamic video directory mounts
    dir_index=0
    for container_path in "${DIRS[@]}"; do
        # Trim whitespace
        container_path=$(echo "$container_path" | xargs)

        # Skip /app/data/videos as it's already mounted via ./data:/app/data
        if [ "$container_path" = "/app/data/videos" ]; then
            echo -e "${YELLOW}Skipping $container_path (already mounted via ./data:/app/data)${NC}"
            ((dir_index++))
            continue
        fi

        # Determine host path using the current dir_index
        if [ ${#HOST_PATHS[@]} -gt $dir_index ] && [ -n "${HOST_PATHS[$dir_index]}" ]; then
            # Use corresponding host path from HOST_VIDEO_PATHS
            host_path=$(echo "${HOST_PATHS[$dir_index]}" | xargs)
            echo -e "${GREEN}Mounting: $host_path -> $container_path${NC}"
        else
            # Default to ./data/videos if no host path specified
            host_path="./data/videos"
            echo -e "${YELLOW}Using default host path for $container_path: $host_path${NC}"
        fi

        echo "      - $host_path:$container_path" >>docker-compose.override.yml
        ((dir_index++))
    done

    echo "" >>docker-compose.override.yml
done

echo -e "${GREEN}Generated docker-compose.override.yml successfully!${NC}"
echo ""
echo "Volume mounts created:"
dir_index=0
for container_path in "${DIRS[@]}"; do
    container_path=$(echo "$container_path" | xargs)
    if [ "$container_path" = "/app/data/videos" ]; then
        echo "  ./data/videos -> $container_path (via standard mount)"
        ((dir_index++))
    else
        if [ ${#HOST_PATHS[@]} -gt $dir_index ] && [ -n "${HOST_PATHS[$dir_index]}" ]; then
            host_path=$(echo "${HOST_PATHS[$dir_index]}" | xargs)
        else
            host_path="./data/videos"
        fi
        echo "  $host_path -> $container_path"
        ((dir_index++))
    fi
done

echo ""
echo -e "${GREEN}You can now run: docker-compose up${NC}"
echo -e "${YELLOW}Note: Make sure the host directories exist and contain your video files${NC}"
